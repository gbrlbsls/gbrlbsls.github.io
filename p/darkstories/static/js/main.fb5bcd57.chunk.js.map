{"version":3,"sources":["Helper/Util.ts","Component/Game.tsx","Service/Api.ts","Service/DarkStoriesApi.ts","pages/GamePage.tsx","pages/GameStoryPage.tsx","App.tsx","index.tsx"],"names":["copyTextToClipboard","text","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","msg","execCommand","console","log","err","error","removeChild","getCurrentPath","window","location","href","substring","lastIndexOf","Game","props","min","max","loadingTitleClass","loading","loadingContentClass","loadingContentSkeleton","c","Math","random","push","loadingAndEmptyOrValue","className","title","content","endpoint","data","requestOptions","_requestOptions","JSON","stringify","fetch","this","baseUrl","_postRequestOptions","_getRequestOptions","method","headers","mode","redirect","storyHash","post","json","storyId","get","Api","GamePage","useHistory","useState","story","id","resolution","hash","state","setState","useParams","newGame","DarkStoriesApi","then","res","catch","openResolution","e","open","shareStory","alert","copyStoryHash","useEffect","history","replaceState","loadGame","onClick","GameStoryPage","getStoryById","parseInt","App","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fb5bcd57.chunk.js","sourcesContent":["export function getUrlParam(param: string) {\r\n\treturn new URLSearchParams(window.location.search).get(param);\r\n}\r\n\r\nexport function copyTextToClipboard(text: string) {\r\n  var textArea = document.createElement(\"textarea\");\r\n  textArea.value = text;\r\n  \r\n  // Avoid scrolling to bottom\r\n  textArea.style.top = \"0\";\r\n  textArea.style.left = \"0\";\r\n  textArea.style.position = \"fixed\";\r\n\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n\r\n  try {\r\n    var successful = document.execCommand('copy');\r\n    var msg = successful ? 'successful' : 'unsuccessful';\r\n    console.log('Fallback: Copying text command was ' + msg);\r\n  } catch (err) {\r\n    console.error('Fallback: Oops, unable to copy', err);\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n}\r\n\r\nexport function getCurrentPath() {\r\n\treturn window.location.href.substring( 0, window.location.href.lastIndexOf( \"/\" ) + 1);\r\n}\r\n\r\nexport function getRandomArbitrary(min: number, max: number) {\r\n  return Math.random() * (max - min) + min;\r\n}","import { randomInt } from 'crypto';\r\nimport { getRandomArbitrary } from '../Helper/Util';\r\nimport './Game.css';\r\n\r\ninterface Props {\r\n\tloading: boolean,\r\n\ttitle: string,\r\n\tcontent: string\r\n}\r\n\r\nexport default function Game(props: Props) {\r\n\r\n\tconst loadingTitleClass = (props.loading) ? \"skeleton-title\" : \"\";\r\n\tconst loadingContentClass = (props.loading) ? \"skeleton-content\" : \"\";\r\n\r\n\tconst loadingContentSkeleton = [];\r\n\tif (props.loading) {\r\n\r\n\t\tfor (let c = 0; c < getRandomArbitrary(1, 6); c++) {\r\n\t\t\tloadingContentSkeleton.push(<span key={c}></span>);\r\n\t\t}\r\n\r\n\t}\r\n\tfunction loadingAndEmptyOrValue(value: string) {\r\n\t\tif (props.loading)\r\n\t\t\treturn \"\";\r\n\t\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className=\"row justify-content-center pt-3\tfont-monospace\" style={{\"minHeight\": \"60vh\"}}>\r\n\t\t\t\t<div className=\"col-12\">\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t\t<span className={\"text-start h4 \" + loadingTitleClass}>{loadingAndEmptyOrValue(props.title)}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<hr/>\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-8\">\r\n\t\t\t\t\t\t\t<p className={\"text-start lead fs-6 \" + loadingContentClass}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprops.loading && loadingContentSkeleton\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{loadingAndEmptyOrValue(props.content)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n","export default class {\r\n\r\n\tstatic baseUrl: String = \"\";\r\n\tstatic _postRequestOptions: RequestInit = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: { 'Content-Type': 'application/json' },\r\n\t}\r\n\r\n\tstatic _getRequestOptions: RequestInit = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: \"cors\",\r\n\t\tredirect: \"follow\",\r\n\t\theaders: { 'Content-Type': 'application/json' }\r\n\t}\r\n\r\n\tstatic async post(endpoint: string, data: any = null, requestOptions: RequestInit = {}) {\r\n\r\n\t\tlet _requestOptions = {\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t};\r\n\r\n\t\treturn await fetch(`${this.baseUrl}${endpoint}`, {..._requestOptions, ...this._postRequestOptions, ...requestOptions});\r\n\t}\r\n\r\n\tstatic async get(endpoint: string, requestOptions: RequestInit = {}) {\r\n\t\treturn await fetch(`${this.baseUrl}${endpoint}`, {...this._getRequestOptions, ...requestOptions});\r\n\t}\r\n\r\n}\r\n","import Api from \"./Api\";\r\n\r\nexport default class extends Api{\r\n\tstatic baseUrl: String = \"https://hidden-wildwood-83104.herokuapp.com\";\r\n\tstatic _getRequestOptions: RequestInit = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: \"cors\",\r\n\t}\r\n\r\n\tstatic async newGame(storyHash: string|null = null) {\r\n\r\n\t\tlet endpoint = \"\";\r\n\t\tif(storyHash != null)\r\n\t\t\tendpoint = `/game/new-game-from-story-hash`;\r\n\t\telse\r\n\t\t\tendpoint = \"/game/new-game\";\r\n\r\n\t\treturn (await this.post(endpoint, storyHash)).json();\r\n\t}\r\n\r\n\tstatic async getStoryById(storyId: number) {\r\n\t\treturn await (await this.get(`/story/get-story-by-id?id=${storyId}`)).json();\r\n\t}\r\n\r\n}","import { Link, useHistory, useParams } from 'react-router-dom';\nimport Game from '../Component/Game';\n\nimport React, { Component, useEffect, useState } from 'react'\nimport DarkStoriesApi from '../Service/DarkStoriesApi';\nimport { copyTextToClipboard, getCurrentPath, getUrlParam } from '../Helper/Util';\nimport { render } from '@testing-library/react';\n\ninterface ParamTypes {\n  storyHash: string|undefined\n}\n\ndeclare global {\n  interface Window { story: any; }\n}\n\nexport function GamePage() {\n  let history = useHistory();\n  const [state, setState] = useState({story:{id:0,title:\"\",content:\"\", resolution: \"\",hash:0}, loading: true})\n  const {storyHash} = useParams<ParamTypes>();\n\n  useEffect(setup, []);\n\n  function setup() {\n    if (storyHash == null)\n      return newGame();\n    \n    return loadGame();\n  }\n\n  function loadGame() {\n    window.history.replaceState({}, document.title, \"/\" + \"\");\n\t\tDarkStoriesApi.newGame(storyHash).then(res => {\n\t\t\tsetState({story: res.story, loading: false});\n      window.story = res.story;\n\t\t}).catch(err => {\n\t\t\tconsole.log({err});\n\t\t\tsetState({loading: false, story: {id:0,title:\"Algo deu errado...\",content:\"Não foi possível obter uma história...\", resolution: \"Você se deu mal\",hash:0}});\n\t\t})\n  }\n\n  function newGame() {\n    setState({...state, loading: true});\n    DarkStoriesApi.newGame().then(res => {\n      setState({story: res.story, loading: false});\n      window.story = res.story;\n    }).catch(err => {\n      console.log({err});\n      setState({loading: false, story: {id:0,title:\"Algo deu errado...\",content:\"Não foi possível obter uma história...\", resolution: \"Você se deu mal\",hash:0}});\n    })\n  }\n\n  function openResolution(e: any) {\n    var gameResolutionWindow: any = window.open(\"#story\", \"_blank\", \"height=480,width=480\");\n    gameResolutionWindow.story = window.story;\n  }\n\n  function shareStory() {\n    copyTextToClipboard(`${getCurrentPath()}story/${window.story.id}`);\n    alert(\"Link para história copiado!\")\n  }\n\n  function copyStoryHash() {\n    copyTextToClipboard(`${getCurrentPath()}${window.story.hash}`);\n    alert(\"Link para jogo da história copiado!\")\n  }\n\n  function render() {\n    return (\n      <div>\n        <Game title={state.story.title} content={state.story.content} loading={state.loading}></Game>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"btn-group-vertical\">\n\n            <div className=\"btn btn-outline-light\" onClick={openResolution}>\n              Abrir resolução\n            </div>\n\n            <div className=\"btn btn-outline-light\" onClick={newGame}>\n              Novo jogo\n            </div>\n\n            <div className=\"btn btn-outline-light\" onClick={shareStory}>\n              Compartilhar\n            </div>\n\n            <div className=\"btn btn-outline-light\" onClick={copyStoryHash}>\n              Copiar jogo\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return render();\n}\n","import { Link, useParams } from 'react-router-dom';\n\nimport { withRouter } from \"react-router\";\n\nimport React, { Component, useEffect, useState } from 'react'\nimport Game from '../Component/Game';\nimport DarkStoriesApi from '../Service/DarkStoriesApi';\n\ndeclare global {\n  interface Window { story: any; }\n}\n\ninterface ParamTypes {\n  storyId: string|undefined\n}\n\ninterface Props {\n  \n}\ninterface State {\n  story: {\n    title: string, content: string, resolution: string\n  }\n}\n\nfunction GameStoryPage(props: Props) {\n\n  const {storyId} = useParams<ParamTypes>();   \n  let [state, setState] = useState({story: {title:\"-\",content:\"-\", resolution: \"\"}, loading: true});\n\n  console.log(\"gameStory.mount\")\n  \n  useEffect(loadStory, []);\n  useEffect(loadResolution, []);\n\n  function loadStory() {\n    \n\n    if (storyId == null)\n      return;\n\n      DarkStoriesApi.getStoryById(parseInt(storyId)).then(story => {\n        setState({story, loading: false});\n      }).catch(err => {\n        console.log({err});\n        setState({story: {title:\"Falha ao carregar...\",content:\"-\", resolution: \"\"}, loading: false});\n      })\n\n  }\n\n  function loadResolution() {\n    if (window.story == null)\n      return;\n\n      setState({story: window.story, loading: false});\n  }\n  \n  function render() {\n    return (\n      <div>\n        <Game title={state.story.title} content={state.story.content} loading={state.loading}></Game>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <p className=\"text-start lead fs-6\">\n              {state.story.resolution}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return render();\n}\n\nexport  { GameStoryPage };","import React from 'react';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { GamePage } from './pages/GamePage';\nimport { GameStoryPage } from './pages/GameStoryPage';\n\nconsole.log(\"App.tsx loaded\")\n\nconst App = () => (\n  <div className=\"container\">\n    <HashRouter>\n      <Switch>\n        <Route path=\"/story/:storyId\" component={GameStoryPage} />\n        <Route path=\"/story\" component={GameStoryPage} />\n        <Route path=\"/:storyHash\" component={GamePage} />\n        <Route path=\"/\" component={GamePage} />\n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\n\nconsole.log('index.tsx loaded')\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}