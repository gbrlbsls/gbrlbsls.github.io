{"version":3,"sources":["Helper/Util.ts","Component/Game.tsx","Service/Api.ts","Service/DarkStoriesApi.ts","pages/GamePage.tsx","pages/GameStoryPage.tsx","App.tsx","index.tsx"],"names":["buildHashUrl","path","console","log","window","location","host","pathname","copyTextToClipboard","text","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","msg","execCommand","err","error","removeChild","Game","props","min","max","loadingTitleClass","loading","loadingContentClass","loadingContentSkeleton","c","Math","random","push","loadingAndEmptyOrValue","className","title","content","API","endpoint","data","requestOptions","_requestOptions","JSON","stringify","fetch","this","baseUrl","_postRequestOptions","_getRequestOptions","method","headers","mode","redirect","DarkStoriesApi","storyHash","post","json","storyId","get","GamePage","useState","story","id","resolution","hash","hiddenResolution","state","setState","useParams","newGame","then","res","catch","showResolution","e","openResolution","open","shareStory","alert","copyStoryHash","useEffect","history","replaceState","href","replace","onClick","disabled","GameStoryPage","getStoryById","parseInt","App","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.62e359b4.chunk.js","sourcesContent":["export function buildHashUrl(path: string) {\r\n  console.log(window.location)\r\n  return `${window.location.host}${window.location.pathname}#${path}`;\r\n}\r\n\r\nexport function copyTextToClipboard(text: string) {\r\n  var textArea = document.createElement(\"textarea\");\r\n  textArea.value = text;\r\n  \r\n  // Avoid scrolling to bottom\r\n  textArea.style.top = \"0\";\r\n  textArea.style.left = \"0\";\r\n  textArea.style.position = \"fixed\";\r\n\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n\r\n  try {\r\n    var successful = document.execCommand('copy');\r\n    var msg = successful ? 'successful' : 'unsuccessful';\r\n    console.log('Fallback: Copying text command was ' + msg);\r\n  } catch (err) {\r\n    console.error('Fallback: Oops, unable to copy', err);\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n}\r\n\r\nexport function getCurrentPath() {\r\n\treturn window.location.href.substring( 0, window.location.href.lastIndexOf( \"/\" ) + 1);\r\n}\r\n\r\nexport function getRandomArbitrary(min: number, max: number) {\r\n  return Math.random() * (max - min) + min;\r\n}","import { getRandomArbitrary } from '../Helper/Util';\r\nimport './Game.css';\r\n\r\ninterface Props {\r\n\tloading: boolean,\r\n\ttitle: string,\r\n\tcontent: string\r\n}\r\n\r\nexport default function Game(props: Props) {\r\n\r\n\tconst loadingTitleClass = (props.loading) ? \"skeleton-title\" : \"\";\r\n\tconst loadingContentClass = (props.loading) ? \"skeleton-content\" : \"\";\r\n\r\n\tconst loadingContentSkeleton = [];\r\n\tif (props.loading) {\r\n\r\n\t\tfor (let c = 0; c < getRandomArbitrary(1, 6); c++) {\r\n\t\t\tloadingContentSkeleton.push(<span key={c}></span>);\r\n\t\t}\r\n\r\n\t}\r\n\tfunction loadingAndEmptyOrValue(value: string) {\r\n\t\tif (props.loading)\r\n\t\t\treturn \"\";\r\n\t\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className=\"row justify-content-center pt-3\tfont-monospace\" style={{\"minHeight\": \"60vh\"}}>\r\n\t\t\t\t<div className=\"col-12\">\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t\t<span className={\"text-start h4 \" + loadingTitleClass}>{loadingAndEmptyOrValue(props.title)}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<hr/>\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-8\">\r\n\t\t\t\t\t\t\t<p className={\"text-start lead fs-6 \" + loadingContentClass}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprops.loading && loadingContentSkeleton\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{loadingAndEmptyOrValue(props.content)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n","class API {\r\n\r\n\tstatic baseUrl: String = \"\";\r\n\tstatic _postRequestOptions: RequestInit = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: { 'Content-Type': 'application/json' },\r\n\t}\r\n\r\n\tstatic _getRequestOptions: RequestInit = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: \"cors\",\r\n\t\tredirect: \"follow\",\r\n\t\theaders: { 'Content-Type': 'application/json' }\r\n\t}\r\n\r\n\tstatic async post(endpoint: string, data: any = null, requestOptions: RequestInit = {}) {\r\n\r\n\t\tlet _requestOptions = {\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t};\r\n\r\n\t\treturn await fetch(`${this.baseUrl}${endpoint}`, {..._requestOptions, ...this._postRequestOptions, ...requestOptions});\r\n\t}\r\n\r\n\tstatic async get(endpoint: string, requestOptions: RequestInit = {}) {\r\n\t\treturn await fetch(`${this.baseUrl}${endpoint}`, {...this._getRequestOptions, ...requestOptions});\r\n\t}\r\n\r\n}\r\n\r\nexport default API;","import Api from \"./Api\";\r\n\r\nclass DarkStoriesApi extends Api{\r\n\tstatic baseUrl: String = \"https://hidden-wildwood-83104.herokuapp.com\";\r\n\tstatic _getRequestOptions: RequestInit = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: \"cors\",\r\n\t}\r\n\r\n\tstatic async newGame(storyHash: string|null = null) {\r\n\r\n\t\tlet endpoint = \"\";\r\n\t\tif(storyHash != null)\r\n\t\t\tendpoint = `/game/new-game-from-story-hash`;\r\n\t\telse\r\n\t\t\tendpoint = \"/game/new-game\";\r\n\r\n\t\treturn (await this.post(endpoint, storyHash)).json();\r\n\t}\r\n\r\n\tstatic async getStoryById(storyId: number) {\r\n\t\treturn await (await this.get(`/story/get-story-by-id?id=${storyId}`)).json();\r\n\t}\r\n\r\n}\r\n\r\nexport default DarkStoriesApi;","import { useParams } from 'react-router-dom';\r\nimport Game from '../Component/Game';\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport DarkStoriesApi from '../Service/DarkStoriesApi';\r\nimport { buildHashUrl, copyTextToClipboard, getCurrentPath } from '../Helper/Util';\r\n\r\ninterface ParamTypes {\r\n  storyHash: string|undefined\r\n}\r\n\r\ndeclare global {\r\n  interface Window { story: any; }\r\n}\r\n\r\nexport function GamePage() {\r\n  const [state, setState] = useState({story:{id:0,title:\"\",content:\"\", resolution: \"\",hash:0}, loading: true, hiddenResolution: true })\r\n  const {storyHash} = useParams<ParamTypes>();\r\n\r\n  useEffect(() => {\r\n    function componentDidMount() {\r\n      if (storyHash == null)\r\n      return newGame();\r\n    \r\n      return loadGame();\r\n    };\r\n    componentDidMount();\r\n  }, []);\r\n\r\n  function loadGame() {\r\n    window.history.replaceState({}, document.title,  window.location.href.replace(window.location.hash, \"#\"));\r\n    \r\n\t\tDarkStoriesApi.newGame(storyHash).then(res => {\r\n\t\t\tsetState({...state, story: res.story, loading: false});\r\n      window.story = res.story;\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log({err});\r\n\t\t\tsetState({...state, loading: false, story: {id:0,title:\"Algo deu errado...\",content:\"Não foi possível obter uma história...\", resolution: \"Você se deu mal\",hash:0}});\r\n\t\t})\r\n  }\r\n\r\n  function newGame() {\r\n    setState({...state, loading: true, hiddenResolution: true});\r\n    DarkStoriesApi.newGame().then(res => {\r\n      setState({...state, story: res.story, loading: false});\r\n      window.story = res.story;\r\n    }).catch(err => {\r\n      console.log({err});\r\n      setState({...state, loading: false, story: {id:0,title:\"Algo deu errado...\",content:\"Não foi possível obter uma história...\", resolution: \"Você se deu mal\",hash:0}});\r\n    })\r\n  }\r\n\r\n  function showResolution(e: any) {\r\n    setState({...state, hiddenResolution: !state.hiddenResolution});\r\n  }\r\n\r\n  function openResolution(e: any) {\r\n    var gameResolutionWindow: any = window.open(\"#story\", \"_blank\", \"height=480,width=480\");\r\n    gameResolutionWindow.story = window.story;\r\n  }\r\n\r\n  function shareStory() {\r\n    copyTextToClipboard(buildHashUrl(`story/${window.story.id}`));\r\n    alert(\"Link para história copiado!\")\r\n  }\r\n\r\n  function copyStoryHash() {\r\n    copyTextToClipboard(buildHashUrl(`hash/${window.story.hash}`));\r\n    alert(\"Link para jogo da história copiado!\")\r\n  }\r\n\r\n  function render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row row-cols-2\">\r\n          <div className=\"col-12 col-md-8\">\r\n            <Game title={state.story.title} content={state.story.content} loading={state.loading}></Game>\r\n            {\r\n              !state.hiddenResolution &&\r\n              <>\r\n              <hr></hr>\r\n              <p className=\"text-start lead fs-6\">\r\n                {state.story.resolution}\r\n              </p>\r\n              </>\r\n            }\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-4\">\r\n            <div className=\"btn-group-vertical w-100 mt-3 pt-5\">\r\n              <button className=\"btn btn-outline-light text-md-start\" onClick={showResolution} disabled={state.loading}>\r\n                Mostrar resolução\r\n              </button>\r\n\r\n              <button className=\"btn btn-outline-light text-md-start\" onClick={openResolution} disabled={state.loading}>\r\n                Abrir resolução\r\n              </button>\r\n\r\n              <div className=\"mb-1\"></div>\r\n              \r\n              <button className=\"btn btn-outline-light text-md-start\" onClick={newGame} disabled={state.loading}>\r\n                Novo jogo\r\n              </button>\r\n\r\n              <button className=\"btn btn-outline-light text-md-start\" onClick={shareStory} disabled={state.loading}>\r\n                Compartilhar\r\n              </button>\r\n\r\n              <div className=\"mb-1\"></div>\r\n\r\n              <button className=\"btn btn-outline-light text-md-start\" onClick={copyStoryHash} disabled={state.loading}>\r\n                Copiar jogo\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return render();\r\n}\r\n","import { useParams } from 'react-router-dom';\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport Game from '../Component/Game';\r\nimport DarkStoriesApi from '../Service/DarkStoriesApi';\r\n\r\ndeclare global {\r\n  interface Window { story: any; }\r\n}\r\n\r\ninterface ParamTypes {\r\n  storyId: string|undefined\r\n}\r\n\r\nfunction GameStoryPage() {\r\n\r\n  const {storyId} = useParams<ParamTypes>();   \r\n  let [state, setState] = useState({story: {title:\"-\",content:\"-\", resolution: \"\"}, loading: true});\r\n\r\n  console.log(\"gameStory.mount\")\r\n  \r\n  useEffect(() => {\r\n    if (storyId == null)\r\n      return;\r\n\r\n      DarkStoriesApi.getStoryById(parseInt(storyId)).then(story => {\r\n        setState({story, loading: false});\r\n      }).catch(err => {\r\n        console.log({err});\r\n        setState({story: {title:\"Falha ao carregar...\",content:\"-\", resolution: \"\"}, loading: false});\r\n      })\r\n  }, [storyId]);\r\n  useEffect(loadResolution, []);\r\n\r\n  function loadResolution() {\r\n    if (window.story == null)\r\n      return;\r\n\r\n      setState({story: window.story, loading: false});\r\n  }\r\n  \r\n  function render() {\r\n    return (\r\n      <div>\r\n        <Game title={state.story.title} content={state.story.content} loading={state.loading}></Game>\r\n        <hr></hr>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <p className=\"text-start lead fs-6\">\r\n              {state.story.resolution}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return render();\r\n}\r\n\r\nexport  { GameStoryPage };","import React from 'react';\r\n\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport { GamePage } from './pages/GamePage';\r\nimport { GameStoryPage } from './pages/GameStoryPage';\r\n\r\nconsole.log(\"App.tsx loaded\")\r\n\r\nconst App = () => (\r\n  <div className=\"container\">\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/story/:storyId\" component={GameStoryPage} />\r\n        <Route path=\"/story\" component={GameStoryPage} />\r\n        <Route path=\"/hash/:storyHash\" component={GamePage} />\r\n        <Route path=\"/\" component={GamePage} />\r\n      </Switch>\r\n    </HashRouter>\r\n  </div>\r\n);\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nconsole.log('index.tsx loaded')\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}