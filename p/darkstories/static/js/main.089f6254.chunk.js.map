{"version":3,"sources":["Configs/Environment.ts","Helper/Util.ts","Component/Game.tsx","Service/Api.ts","Service/DarkStoriesApi.ts","pages/GamePage.tsx","pages/GameStoryPage.tsx","App.tsx","index.tsx"],"names":["Environment","buildHashUrl","path","console","log","window","location","host","pathname","copyTextToClipboard","text","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","msg","execCommand","err","error","removeChild","fetchWithTimeout","endpoint","options","a","retries","timeout","controller","AbortController","id","setTimeout","abort","fetch","signal","response","clearTimeout","DOMException","message","toString","includes","Game","props","min","max","loadingTitleClass","loading","loadingContentClass","loadingContentSkeleton","c","Math","random","push","loadingAndEmptyOrValue","className","title","content","API","data","requestOptions","_requestOptions","JSON","stringify","this","baseUrl","_postRequestOptions","_getRequestOptions","_defaultOptions","method","headers","mode","redirect","DarkStoriesApi","storyHash","post","json","storyId","get","GamePage","useState","story","resolution","hash","hiddenResolution","state","setState","useParams","newGame","then","res","catch","showResolution","e","openResolution","open","shareStory","alert","copyStoryHash","useEffect","history","replaceState","href","replace","onClick","disabled","GameStoryPage","getStoryById","parseInt","App","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.089f6254.chunk.js","sourcesContent":["export const Environment = { \n\tDEFAULT_API_TIMEOUT: 1000,\n\tMAX_FETCH_RETRIES: 3\n}","import { RequestInitTimed } from '../Models/RequestInit.model';\nimport { Environment } from '../Configs/Environment';\nexport function buildHashUrl(path: string) {\n  console.log(window.location)\n  return `${window.location.host}${window.location.pathname}#${path}`;\n}\n\nexport function copyTextToClipboard(text: string) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n\n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\n\nexport function getCurrentPath() {\n  return window.location.href.substring(0, window.location.href.lastIndexOf(\"/\") + 1);\n}\n\nexport function getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport async function fetchWithTimeout(endpoint: string, options: RequestInitTimed, retries = 0): Promise<Response> {\n  const { timeout = 3000 } = options;\n\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), timeout);\n\n  let response: Response;\n  try {\n    response = await fetch(endpoint, {\n      ...options,\n      signal: controller.signal\n    });\n    clearTimeout(id);\n  } catch (err: any) {\n    if (retries < Environment.MAX_FETCH_RETRIES && (err instanceof DOMException) && err.message?.toString().includes(\"The operation was aborted\")) {\n      console.log('fetchWithTimeout', `timeout when fetching ${endpoint}, retrying... (${retries+1}/${Environment.MAX_FETCH_RETRIES})`)\n      return fetchWithTimeout(endpoint, { ...options, timeout: timeout * 2 }, retries+1);\n    }\n\n    throw err;\n  }\n\n  return response;\n}","import { getRandomArbitrary } from '../Helper/Util';\nimport './Game.css';\n\ninterface Props {\n\tloading: boolean,\n\ttitle: string,\n\tcontent: string\n}\n\nexport default function Game(props: Props) {\n\n\tconst loadingTitleClass = (props.loading) ? \"skeleton-title\" : \"\";\n\tconst loadingContentClass = (props.loading) ? \"skeleton-content\" : \"\";\n\n\tconst loadingContentSkeleton = [];\n\tif (props.loading) {\n\n\t\tfor (let c = 0; c < getRandomArbitrary(1, 6); c++) {\n\t\t\tloadingContentSkeleton.push(<span key={c}></span>);\n\t\t}\n\n\t}\n\tfunction loadingAndEmptyOrValue(value: string) {\n\t\tif (props.loading)\n\t\t\treturn \"\";\n\t\t\n\t\treturn value;\n\t}\n\n\treturn (\n\t\t\t<div className=\"row justify-content-center pt-3\tfont-monospace\" style={{\"minHeight\": \"60vh\"}}>\n\t\t\t\t<div className=\"col-12\">\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t<span className={\"text-start h4 \" + loadingTitleClass}>{loadingAndEmptyOrValue(props.title)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<hr/>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-md-8\">\n\t\t\t\t\t\t\t<p className={\"text-start lead fs-6 \" + loadingContentClass}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprops.loading && loadingContentSkeleton\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{loadingAndEmptyOrValue(props.content)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t)\n}\n","import { Environment } from \"../Configs/Environment\";\nimport { fetchWithTimeout } from \"../Helper/Util\";\nimport { RequestInitTimed } from '../Models/RequestInit.model';\nclass API {\n\n\tstatic baseUrl: String = \"\";\n\n\tprivate static _defaultOptions: RequestInitTimed = {\n\t\ttimeout: Environment.DEFAULT_API_TIMEOUT\n\t}\n\n\tstatic _postRequestOptions: RequestInitTimed = {\n\t\t...API._defaultOptions,\n\t\tmethod: 'POST',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t}\n\n\tstatic _getRequestOptions: RequestInitTimed = {\n\t\t...API._defaultOptions,\n\t\tmethod: 'GET',\n\t\tmode: \"cors\",\n\t\tredirect: \"follow\",\n\t\theaders: { 'Content-Type': 'application/json' },\n\t}\n\n\tstatic async post(endpoint: string, data: any = null, requestOptions: RequestInit = {}) {\n\n\t\tlet _requestOptions = {\n\t\t\tbody: JSON.stringify(data)\n\t\t};\n\n\t\treturn await fetchWithTimeout(`${this.baseUrl}${endpoint}`, { ..._requestOptions, ...this._postRequestOptions, ...requestOptions });\n\t}\n\n\tstatic async get(endpoint: string, requestOptions: RequestInit = {}) {\n\t\treturn await fetchWithTimeout(`${this.baseUrl}${endpoint}`, { ...this._getRequestOptions, ...requestOptions });\n\t}\n\n}\n\nexport default API;","import Api from \"./Api\";\n\nclass DarkStoriesApi extends Api{\n\tstatic baseUrl: String = \"http://gbrl.servehttp.com\";\n\n\tstatic async newGame(storyHash: string|null = null) {\n\n\t\tlet endpoint = \"\";\n\t\tif(storyHash != null)\n\t\t\tendpoint = `/game/new-game-from-story-hash`;\n\t\telse\n\t\t\tendpoint = \"/game/new-game\";\n\n\t\treturn (await this.post(endpoint, storyHash)).json();\n\t}\n\n\tstatic async getStoryById(storyId: number) {\n\t\treturn await (await this.get(`/story/get-story-by-id?id=${storyId}`)).json();\n\t}\n\n}\n\nexport default DarkStoriesApi;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Game from '../Component/Game';\nimport { buildHashUrl, copyTextToClipboard } from '../Helper/Util';\nimport DarkStoriesApi from '../Service/DarkStoriesApi';\n\ninterface ParamTypes {\n  storyHash: string | undefined;\n}\n\ndeclare global {\n  interface Window {\n    story: any;\n  }\n}\n\nexport function GamePage() {\n  const [state, setState] = useState({\n    story: { id: 0, title: \"\", content: \"\", resolution: \"\", hash: 0 },\n    loading: true,\n    hiddenResolution: true,\n  });\n  const { storyHash } = useParams<ParamTypes>();\n\n  useEffect(() => {\n    if (storyHash == null) \n      return newGame();\n\n    return loadGame();\n  }, []);\n\n  function loadGame() {\n    window.history.replaceState(\n      {},\n      document.title,\n      window.location.href.replace(window.location.hash, \"#\")\n    );\n\n    DarkStoriesApi.newGame(storyHash)\n      .then((res) => {\n        setState({ ...state, story: res.story, loading: false });\n        window.story = res.story;\n      })\n      .catch((err) => {\n        console.log('loadGame', { err });\n        setState({\n          ...state,\n          loading: false,\n          story: {\n            id: 0,\n            title: \"Algo deu errado...\",\n            content: \"Não foi possível obter uma história...\",\n            resolution: \"Você se deu mal\",\n            hash: 0,\n          },\n        });\n      });\n  }\n\n  function newGame() {\n    setState({ ...state, loading: true, hiddenResolution: true });\n    DarkStoriesApi.newGame()\n      .then((res) => {\n        setState({ ...state, story: res.story, loading: false });\n        window.story = res.story;\n      })\n      .catch((err) => {\n        console.log('newGame', { err });\n        setState({\n          ...state,\n          loading: false,\n          story: {\n            id: 0,\n            title: \"Algo deu errado...\",\n            content: \"Não foi possível obter uma história...\",\n            resolution: \"Você se deu mal\",\n            hash: 0,\n          },\n        });\n      });\n  }\n\n  function showResolution(e: any) {\n    setState({ ...state, hiddenResolution: !state.hiddenResolution });\n  }\n\n  function openResolution(e: any) {\n    var gameResolutionWindow: any = window.open(\n      \"#story\",\n      \"_blank\",\n      \"height=480,width=480\"\n    );\n    gameResolutionWindow.story = window.story;\n  }\n\n  function shareStory() {\n    copyTextToClipboard(buildHashUrl(`story/${window.story.id}`));\n    alert(\"Link para história copiado!\");\n  }\n\n  function copyStoryHash() {\n    copyTextToClipboard(buildHashUrl(`hash/${window.story.hash}`));\n    alert(\"Link para jogo da história copiado!\");\n  }\n\n  function render() {\n    return (\n      <div>\n        <div className=\"row row-cols-2\">\n          <div className=\"col-12 col-md-8\">\n            <Game\n              title={state.story.title}\n              content={state.story.content}\n              loading={state.loading}\n            ></Game>\n            {!state.hiddenResolution && (\n              <>\n                <hr></hr>\n                <p className=\"text-start lead fs-6\">{state.story.resolution}</p>\n              </>\n            )}\n          </div>\n\n          <div className=\"col-12 col-md-4\">\n            <div className=\"btn-group-vertical w-100 mt-3 pt-5\">\n              <button\n                className=\"btn btn-outline-light text-md-start\"\n                onClick={showResolution}\n                disabled={state.loading}\n              >\n                Mostrar resolução\n              </button>\n\n              <button\n                className=\"btn btn-outline-light text-md-start\"\n                onClick={openResolution}\n                disabled={state.loading}\n              >\n                Abrir resolução\n              </button>\n\n              <div className=\"mb-1\"></div>\n\n              <button\n                className=\"btn btn-outline-light text-md-start\"\n                onClick={newGame}\n                disabled={state.loading}\n              >\n                Novo jogo\n              </button>\n\n              <button\n                className=\"btn btn-outline-light text-md-start\"\n                onClick={shareStory}\n                disabled={state.loading}\n              >\n                Compartilhar\n              </button>\n\n              <div className=\"mb-1\"></div>\n\n              <button\n                className=\"btn btn-outline-light text-md-start\"\n                onClick={copyStoryHash}\n                disabled={state.loading}\n              >\n                Copiar jogo\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return render();\n}\n","import { useParams } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react'\nimport Game from '../Component/Game';\nimport DarkStoriesApi from '../Service/DarkStoriesApi';\n\ndeclare global {\n  interface Window { story: any; }\n}\n\ninterface ParamTypes {\n  storyId: string|undefined\n}\n\nfunction GameStoryPage() {\n\n  const {storyId} = useParams<ParamTypes>();   \n  let [state, setState] = useState({story: {title:\"-\",content:\"-\", resolution: \"\"}, loading: true});\n\n  console.log(\"gameStory.mount\")\n  \n  useEffect(() => {\n    if (storyId == null)\n      return;\n\n      DarkStoriesApi.getStoryById(parseInt(storyId)).then(story => {\n        setState({story, loading: false});\n      }).catch(err => {\n        console.log({err});\n        setState({story: {title:\"Falha ao carregar...\",content:\"-\", resolution: \"\"}, loading: false});\n      })\n  }, [storyId]);\n  useEffect(loadResolution, []);\n\n  function loadResolution() {\n    if (window.story == null)\n      return;\n\n      setState({story: window.story, loading: false});\n  }\n  \n  function render() {\n    return (\n      <div>\n        <Game title={state.story.title} content={state.story.content} loading={state.loading}></Game>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <p className=\"text-start lead fs-6\">\n              {state.story.resolution}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return render();\n}\n\nexport  { GameStoryPage };","import React from 'react';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { GamePage } from './pages/GamePage';\nimport { GameStoryPage } from './pages/GameStoryPage';\n\nconsole.log(\"App.tsx loaded\")\n\nconst App = () => (\n  <div className=\"container\">\n    <HashRouter>\n      <Switch>\n        <Route path=\"/story/:storyId\" component={GameStoryPage} />\n        <Route path=\"/story\" component={GameStoryPage} />\n        <Route path=\"/hash/:storyHash\" component={GamePage} />\n        <Route path=\"/\" component={GamePage} />\n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconsole.log('index.tsx loaded')\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}